/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package currency.converter.english;

import java.awt.Image;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;



/**
 *
 * @author Bushra
 */
public class currency2 extends javax.swing.JFrame {

    /**
     * Creates new form currency2
     */
    public currency2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtamount = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        txtfrom = new javax.swing.JComboBox<>();
        txtto = new javax.swing.JComboBox<>();
        Con = new javax.swing.JButton();
        Close = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 255));
        jLabel1.setText("Currency Converter");

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        jLabel2.setText("Convert This Amount:");

        jLabel3.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        jLabel3.setText("From This Currency:");

        jLabel4.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        jLabel4.setText("To This Currency:");

        jLabel5.setFont(new java.awt.Font("Microsoft YaHei", 1, 18)); // NOI18N
        jLabel5.setText("Result");

        jLabel6.setFont(new java.awt.Font("Gisha", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("BUSHRA");

        jLabel7.setFont(new java.awt.Font("Narkisim", 0, 10)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Groups");

        txtamount.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        txtamount.setText("0.0$");
        txtamount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtamountMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtamountMouseEntered(evt);
            }
        });

        jTextField2.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jTextField2.setText("0.0$");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        txtfrom.setEditable(true);
        txtfrom.setFont(new java.awt.Font("Microsoft YaHei", 0, 15)); // NOI18N
        txtfrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sudanese Pound", "US Dollar", "Saudi Rial", "Arab Emir Dirham", "Mexican Peso" }));

        txtto.setEditable(true);
        txtto.setFont(new java.awt.Font("Microsoft YaHei", 0, 15)); // NOI18N
        txtto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "US Dollar", "Saudi Rial", "Sudanese Pound", "Arab Emir Dirham", "Mexican Peso" }));

        Con.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Con.setText("Convert");
        Con.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConActionPerformed(evt);
            }
        });

        Close.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Close.setText("Close");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtamount)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Close, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(txtfrom, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(txtto, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Con, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(11, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtamount, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtfrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Con, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Close, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel6))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
       
    
        new currency().setVisible(true);

        this.dispose();//to close the current jframe
    }//GEN-LAST:event_CloseActionPerformed

    private void ConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConActionPerformed
        Double tot;
        Double amount = Double.parseDouble(txtamount.getText());
        
        
//Sudanes Pount SDG
        if("Sudanese Pound".equals(txtfrom.getSelectedItem().toString()) && "Sudanese Pound".equals(txtto.getSelectedItem().toString())){
            tot = amount * 1;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("Sudanese Pound".equals(txtfrom.getSelectedItem().toString()) && "US Dollar".equals(txtto.getSelectedItem().toString())){
            tot = amount / 300;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("Sudanese Pound".equals(txtfrom.getSelectedItem().toString()) && "Saudi Rial".equals(txtto.getSelectedItem().toString())){
            tot = amount / 99;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("Sudanese Pound".equals(txtfrom.getSelectedItem().toString()) && "Arab Emir Dirham".equals(txtto.getSelectedItem().toString())){
               tot = amount / 120;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("Sudanese Pound".equals(txtfrom.getSelectedItem().toString()) && "Mexican Peso".equals(txtto.getSelectedItem().toString())){
               tot = amount / 60;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
                        
                
                
//US Doller US $
        if("US Dollar".equals(txtfrom.getSelectedItem().toString()) && "US Dollar".equals(txtto.getSelectedItem().toString())){
            tot = amount * 1;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else              
        if("US Dollar".equals(txtfrom.getSelectedItem().toString()) && "Sudanese Pound".equals(txtto.getSelectedItem().toString())){
            tot = amount * 300;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("US Dollar".equals(txtfrom.getSelectedItem().toString()) && "Saudi Rial".equals(txtto.getSelectedItem().toString())){
            tot = amount * 5;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("US Dollar".equals(txtfrom.getSelectedItem().toString()) && "Arab Emir Dirham".equals(txtto.getSelectedItem().toString())){
            tot = amount * 3;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("US Dollar".equals(txtfrom.getSelectedItem().toString()) && "Mexican Peso".equals(txtto.getSelectedItem().toString())){
            tot = amount * 20;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
             
                
                
//Saudi Rial REL
        if("Saudi Rial".equals(txtfrom.getSelectedItem().toString()) && "US Dollar".equals(txtto.getSelectedItem().toString())){
            tot = amount / 3;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else                
        if("Saudi Rial".equals(txtfrom.getSelectedItem().toString()) && "Sudanese Pound".equals(txtto.getSelectedItem().toString())){
            tot = amount * 99;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("Saudi Rial".equals(txtfrom.getSelectedItem().toString()) && "Saudi Rial".equals(txtto.getSelectedItem().toString())){
            tot = amount * 1;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("Saudi Rial".equals(txtfrom.getSelectedItem().toString()) && "Arab Emir Dirham".equals(txtto.getSelectedItem().toString())){
            tot = amount / 2;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("Saudi Rial".equals(txtfrom.getSelectedItem().toString()) && "Mexican Peso".equals(txtto.getSelectedItem().toString())){
            tot = amount * 15;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
                 
                

//Arab Emir Dirham
        if("Arab Emir Dirham".equals(txtfrom.getSelectedItem().toString()) && "US Dollar".equals(txtto.getSelectedItem().toString())){
            tot = amount / 3;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else                
        if("Arab Emir Dirham".equals(txtfrom.getSelectedItem().toString()) && "Sudanese Pound".equals(txtto.getSelectedItem().toString())){
            tot = amount * 120;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("Arab Emir Dirham".equals(txtfrom.getSelectedItem().toString()) && "Saudi Rial".equals(txtto.getSelectedItem().toString())){
            tot = amount * 3;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("Arab Emir Dirham".equals(txtfrom.getSelectedItem().toString()) && "Arab Emir Dirham".equals(txtto.getSelectedItem().toString())){
            tot = amount * 1;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("Arab Emir Dirham".equals(txtfrom.getSelectedItem().toString()) && "Mexican Peso".equals(txtto.getSelectedItem().toString())){
            tot = amount / 14;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
                        


//Mexican Peso
        if("Mexican Peso".equals(txtfrom.getSelectedItem().toString()) && "US Dollar".equals(txtto.getSelectedItem().toString())){
            tot = amount / 20;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else                
        if("Mexican Peso".equals(txtfrom.getSelectedItem().toString()) && "Sudanese Pound".equals(txtto.getSelectedItem().toString())){
            tot = amount * 60;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("Mexican Peso".equals(txtfrom.getSelectedItem().toString()) && "Saudi Rial".equals(txtto.getSelectedItem().toString())){
            tot = amount / 15;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("Mexican Peso".equals(txtfrom.getSelectedItem().toString()) && "Arab Emir Dirham".equals(txtto.getSelectedItem().toString())){
            tot = amount / 14;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        } else
        if("Mexican Peso".equals(txtfrom.getSelectedItem().toString()) && "Mexican Peso".equals(txtto.getSelectedItem().toString())){
            tot = amount * 1;
            jTextField2.setText(tot.toString()+"$");
            //JOptionPane.showMessageDialog(this,"Your Converter Will Be : "+tot.toString());
        }
    }//GEN-LAST:event_ConActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
    jTextField2.setEditable(false);
    
    
    
    
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void txtamountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtamountMouseClicked
        txtamount.setText("");
    }//GEN-LAST:event_txtamountMouseClicked

    private void txtamountMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtamountMouseEntered
        // TODO add your handling code here:
        //txtamount.setText("");
    }//GEN-LAST:event_txtamountMouseEntered

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
         Image img;
        try {
            img = ImageIO.read(getClass().getResource("icon.png"));
            //I Put the icon image for the form
            this.setIconImage(img);
            
            //This Code Make The Location Of the Form in the middle of the screen when its opened
            this.setLocationRelativeTo(null);
        } catch (IOException ex) {
            Logger.getLogger(currency.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(currency2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(currency2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(currency2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(currency2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new currency2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Close;
    private javax.swing.JButton Con;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField txtamount;
    private javax.swing.JComboBox<String> txtfrom;
    private javax.swing.JComboBox<String> txtto;
    // End of variables declaration//GEN-END:variables
}
